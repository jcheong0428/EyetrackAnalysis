function []=regret_study()
    % Neural signatures of regret study
    % This branch includes 80 trials of selection. 80 selections
    % For 2s TR: 226 acquisitions.
    %
    % USAGE: invgame_auto()
    %   /Applications/EyeTribe/EyeTribe --framerate=60 &
    %   /Applications/EyeTribe/EyeTribe --framerate=30 &
    %   python /Users/jinhyuncheong/EyetrackAnalysis/EyetribeFX/EyeTribe_Matlab_server.py &
    
    %   python /Users/jinhyuncheong/Dropbox/regret/python_source/EyeTribe_Matlab_server.py &
    % INPUTS:
    %   subNo - subject ID
    %   runNo - Run number
    %
    % datafile contains a structure called 'd' containing the following
    % fields:
    %   .p - options structure
    %   .d - data structure
    %   d.payoff - list of payoff used
    % 
    % Jin Hyun Cheong. March 14, 2015
try
    % Use Eyetrackiing
    behav = 1; 
    
global p; global d; % Initialize parameter and data variables
dir = pwd; % get current path
addpath(genpath([pwd,'/EyetribeFX'])); % Add eyetracking to path
rng(now,'twister'); % reset random number generator
p.ExpStartDate = datestr(now,29); % Date format. 
p.ExpStartTime = datestr(now,31); % Time format. 
%% get subject number;
 dataEnter = 0;
while dataEnter == 0;
    message = 'Please enter the subject number : ';
    subNum = input(message);
    message = 'Please enter the run number : ';
    runNum = input(message);
    p.savePath = [pwd '/data/' 's' num2str(subNum,'%02d') '/'];
    if ~exist(p.savePath,'dir')
        mkdir(p.savePath);
    end
    fname = sprintf('regret_%s_s%02d_r%02d.mat',p.ExpStartDate,subNum, runNum);
    dataFileName = sprintf([p.savePath 'regret_%s_s%02d_r%02d.mat'],p.ExpStartDate,subNum, runNum);
    dataEnter =1;
    if exist(dataFileName,'file')==2
        message = 'Data for that subject already exists! \n ';
        fprintf(message);
        dataEnter =0;
    end
end
%% Initialize connection for Eyetracking
if behav == 1
% Initialize connection
% [stat,cmdOut]=system('python /Users/jinhyuncheong/Dropbox/regret/python_source/EyeTribe_Matlab_server.py');
[stat,~]=system('/Applications/EyeTribe/EyeTribe --framerate=60 &')
[stat,~]=system('python /Users/jinhyuncheong/EyetrackAnalysis/EyetribeFX/EyeTribe_Matlab_server.py &')
[success, connection] = eyetribe_init(fname);
%% Init Labjack
% lj = labJack('verbose',false);
end

%% Load payoffs pregenerated by generate_payoffs.m
load('payoffs_generated_100.mat','payoff_subj_run_trial_choice');
d.payoff = squeeze(payoff_subj_run_trial_choice(subNum,:,:,:));
%% Init params
if runNum ~=1 % load params from previous file. 
    load(dataFileName,'p');
    p.dataFileName = dataFileName;
    p.runNum = runNum;
else % Params I need only for the first run.
    p.dataFileName = dataFileName;
    p.runNum = runNum;
    
    % Trial Parameters: meanITI=4; meanISI=3 shoudl give us 1hour 50 minute max
    % meanITI=4; meanISI = 2 gives us 1 hour 35 minutes max
    p.nRuns = 6;
    p.nTrials = 35; % number of trials

    p.cue_dur = 2; % fixed cue duration
    p.decision_dur = 8; %maximum time for decision 
    p.outcome_dur = 2; % fixed outcome duration
    p.regret_dur = 2; %fixed regret duration
    p.ITI = 1.5;
    p.ISI = 2; 

    % response buttons
    KbName('UnifyKeyNames');
    % Miscellaneous parameters
    p.trigger = [KbName('5%') KbName('+') KbName('space')];   % the latter is for computer trigger
    p.keycodes = [KbName('1!'),KbName('2@')];

    %% Visual parameters
    p.black = ntsc2rgb([.1 0 0])*255;
    p.white = [255 255 255];
    p.green = [150 250 50];
    p.yellow = [250 250 50];
    p.blue = ntsc2rgb([.5 -.8 0])*255;
    p.blue_choice = ntsc2rgb([0 -.8 0])*255;
    p.red = ntsc2rgb([.5 .8 0])*255;
    p.red_choice = ntsc2rgb([0 .8 0])*255;
    p.fontColor = p.white;
end

%% Initialize screen
Screen('Preference', 'SkipSyncTests', 1);
if exist('PsychtoolboxVersion', 'file')
%     p.WHICH_SCREEN = max(Screen('Screens')); % for alternative screen
    p.WHICH_SCREEN = min(Screen('Screens')); % for macbook screen
else
    p.WHICH_SCREEN = NaN;
end
% Initialize Psychtoolbox window object.
xres = 1044; yres = 990;
% SetResolution(p.WHICH_SCREEN, xres, yres);
p.background = [200 200 200];
[p.w, p.wRect] = Screen('OpenWindow', p.WHICH_SCREEN, p.background);
Screen('BlendFunction', p.w, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA); % add transparency to images
[p.xcen, p.ycen]  = RectCenter(p.wRect);
%%
% devices
if IsWin || IsLinux
    p.D = 0;
else    % mac
    devices = PsychHID('devices');
    p.D = [];
    for i = 1:length(devices)
        if strcmp(devices(i).usageName,'Keyboard')
            p.D = [p.D i]; % get the keyboards.Scanner should be registered as keyboard
        end
    end
end
    % Parameters for Texts
    p.textSize=70;
    Screen('TextSize',p.w,p.textSize);
    Screen('TextFont',p.w,'Arial');
    Screen('TextStyle',p.w,1); % make bold
    Screen('TextColor',p.w,p.black);  

    p.wrap = 70;
    p.line_spacing = 1.5;
    p.ytext = round(4.5*yres/5);
    % Various locations for images
    p.lCirc= [p.xcen-250 p.ycen-100 p.xcen-50 p.ycen+100];
    p.rCirc= [p.xcen+50 p.ycen-100 p.xcen+250 p.ycen+100];
    p.lArrow = [p.xcen-250+60 p.ycen-70 p.xcen-50-60 p.ycen+70];
    p.rArrow = [p.xcen+50+60 p.ycen-70 p.xcen+250-60 p.ycen+70];
    p.selectOuter = [-40, -40, +40, +40; ];
    p.backLocation = [0 0 xres yres];
    p.penWidth = 20;
    p.selectWidth = 10;

%% make screens 
    % Fixation screen
[p.w2, ~] = Screen('OpenOffscreenWindow', -1, p.background);
Screen('FrameRect', p.w2, p.background, p.backLocation);
Screen('TextSize',p.w2,30);
Screen('TextStyle',p.w2,1); % make bold
Screen('TextColor',p.w2,p.black); 
DrawFormattedText(p.w2,'+','center','center',p.black,60);
fixationscreen = Screen('GetImage',p.w2);
p.fixation = Screen('MakeTexture',p.w,fixationscreen,1);
Screen('Close',p.w2);
% Cue Screen - Empty box
[p.w2, ~] = Screen('OpenOffscreenWindow', -1, p.background);
Screen('FrameRect', p.w2, p.background, p.backLocation);
Screen('FrameRect', p.w2, p.blue, p.lCirc, p.penWidth);
Screen('FrameRect', p.w2, p.red, p.rCirc, p.penWidth);
cuescreen = Screen('GetImage',p.w2);
p.cuescreen = Screen('MakeTexture',p.w,cuescreen,1);
Screen('Close',p.w2);
% Decision screen - Question marks in the center
[p.w2, ~] = Screen('OpenOffscreenWindow', -1, p.background);
Screen('TextSize',p.w2,p.textSize);Screen('TextFont',p.w2,'Arial');Screen('TextStyle',p.w2,1);Screen('TextColor',p.w2,p.black);
Screen('FrameRect', p.w2, p.background, p.backLocation);
Screen('FrameRect', p.w2, p.blue, p.lCirc, p.penWidth);
Screen('FrameRect', p.w2, p.red, p.rCirc, p.penWidth);
p.qmw = RectWidth(Screen('TextBounds',p.w,['?'])); 
p.rc = (p.rCirc(1)+p.rCirc(3))/2;
p.lc = (p.lCirc(1)+p.lCirc(3))/2;
DrawFormattedText(p.w2,'?',p.rc-p.qmw/2,'center',p.black,60);
DrawFormattedText(p.w2 ,'?',p.lc-p.qmw/2,'center',p.black,60);
decscreen = Screen('GetImage',p.w2);
p.decscreen = Screen('MakeTexture',p.w,decscreen,1);
Screen('Close',p.w2);
% Left chosen screen 
[p.w2, ~] = Screen('OpenOffscreenWindow', -1, p.background);
Screen('FrameRect', p.w2, p.background, p.backLocation);
Screen('FrameRect', p.w2, p.blue, p.lCirc, p.penWidth);
Screen('FrameRect', p.w2, p.red, p.rCirc, p.penWidth);
choiceLeft = Screen('GetImage',p.w2);
p.choiceLeft = Screen('MakeTexture',p.w,choiceLeft,1);
Screen('Close',p.w2);
% Right chosen screen
[p.w2, ~] = Screen('OpenOffscreenWindow', -1, p.background);
Screen('FrameRect', p.w2, p.background, p.backLocation);
Screen('FrameRect', p.w2, p.blue, p.lCirc, p.penWidth);
Screen('FrameRect', p.w2, p.red, p.rCirc, p.penWidth);
choiceRight = Screen('GetImage',p.w2);
p.choiceRight = Screen('MakeTexture',p.w,choiceRight,1);
Screen('Close',p.w2);
% %% Test drawing
% Screen('DrawTexture',p.w,p.cuescreen);
% Screen('Flip',p.w);
    
%% Save all the Params
save(p.dataFileName,'p');

%% ############ RUN EXPERIMENT #################
%         for r = 1:p.nRuns % run commented because it is entered
r = runNum;
imageArray = {}; timeArray= [];
%% Start calibration
if behav == 1
    Screen('TextSize',p.w,10);
success = eyetribe_calibrate(connection, p.w);
end
Screen('TextSize',p.w,p.textSize);
Screen('Flip', p.w);
%%   wait for trigger
        Screen('FillRect',p.w,p.background); 
        DrawFormattedText(p.w,'waiting for scanner','center','center',p.black,60);
        tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
         getchoice(p,inf,p.trigger);
        %% Start recording
        if behav == 1
%         tic
%         lj.timedTTL(7,5)
%         toc
        success = eyetribe_start_recording(connection);
%         toc
        end
        run_start = GetSecs;
         
        % loop through trials 
        for t = 1:20
            
            % ITI
            Screen('FillRect',p.w,p.background);
            Screen('DrawTexture',p.w,p.fixation);
            tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
            getchoice(p,p.ITI,[]);
            
            % Get choice
            Screen('FillRect',p.w,p.background);
            Screen('DrawTexture',p.w,p.decscreen);
            tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
            if behav == 1
%             lj.setDIOValue(1,[255 255 255]); % Send signal to Biopac
            success = eyetribe_log(connection, 'Get Choice'); % Send signal to Eyetribe
            end
            d.choice_onset(t,1) = GetSecs - run_start;
            [d.response(t), d.rt(t)] = getchoice(p,p.decision_dur,p.keycodes);
                       
            if d.response(t)==0 % If no response
                getchoice(p,p.ISI,[]);
                Screen('FillRect',p.w,p.background);
                DrawFormattedText(p.w,'Too slow!!','center','center',p.black,60);
                if behav == 1
%                 lj.setDIOValue(2,[255 255 255]);
                success = eyetribe_log(connection, 'Too Slow');
                end
                tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
                getchoice(p,p.outcome_dur,[]);
                
            else % If there was a response
                if d.response(t)==1 % if choice left
                    if behav == 1
%                     lj.setDIOValue(3,[255 255 255]);
                    success = eyetribe_log(connection, 'Chose left');
                    end
                    choicescreen = p.choiceLeft;
                    cc = 1; nc = 2;
                    cw = RectWidth(Screen('TextBounds',p.w,mat2str(d.payoff(r,t,cc)))); cx = (p.lCirc(1)+p.lCirc(3))/2;
                    ncw = RectWidth(Screen('TextBounds',p.w,mat2str(d.payoff(r,t,nc)))); ncx = (p.rCirc(1)+p.rCirc(3))/2;
                    shadeRect = p.lCirc+[+p.penWidth +p.penWidth -p.penWidth -p.penWidth];
                elseif d.response(t) ==2 % if choice right
                    if behav == 1
%                     lj.setDIOValue(4,[255 255 255]);
                    success = eyetribe_log(connection, 'Chose right');
                    end
                    choicescreen = p.choiceRight;
                    cc = 1; nc = 2;
                    cw = RectWidth(Screen('TextBounds',p.w,mat2str(d.payoff(r,t,cc)))); cx = (p.rCirc(1)+p.rCirc(3))/2;
                    ncw = RectWidth(Screen('TextBounds',p.w,mat2str(d.payoff(r,t,nc)))); ncx = (p.lCirc(1)+p.lCirc(3))/2;
                    shadeRect = p.rCirc+[+p.penWidth +p.penWidth -p.penWidth -p.penWidth];
                end
                
                % ISI Shade the one that you chose            
                Screen('FillRect',p.w,p.background);
                Screen('DrawTexture',p.w,choicescreen);
                DrawFormattedText(p.w,'?',p.rc-p.qmw/2,'center',p.black,60);
                DrawFormattedText(p.w,'?',p.lc-p.qmw/2,'center',p.black,60);
                Screen('FillRect', p.w, [100 100 100 150],shadeRect, 5);
                tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
                getchoice(p,p.ISI,[]);
                            
                % Show result for the first one. 
                Screen('FillRect',p.w,p.background);
                Screen('DrawTexture',p.w,choicescreen);
                Screen('FillRect', p.w, [100 100 100 150],shadeRect, 5);
                DrawFormattedText(p.w,mat2str(d.payoff(r,t,cc)),cx-cw/2,'center',p.black,60);
                DrawFormattedText(p.w,'?',ncx-p.qmw/2,'center',p.black,60);
                tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
                if behav == 1
                 % Send signal to Biopac
                    if d.response(t)==1 % if choice left
%                         lj.setDIOValue(5,[255 255 255]);
                        success = eyetribe_log(connection, 'Result Left');
                    elseif d.response(t)==2
%                         lj.setDIOValue(6,[255 255 255]);
                        success = eyetribe_log(connection, 'Result Right');
                    end
                end
                d.result_onset(t,1) = GetSecs - run_start;
                getchoice(p,p.outcome_dur,[]); % Wait for duration
                getchoice(p,p.ISI,[]); % ISI

                % Show regret. 
                Screen('FillRect',p.w,p.background);
                Screen('DrawTexture',p.w,choicescreen);
                DrawFormattedText(p.w,mat2str(d.payoff(r,t,cc)),cx-cw/2,'center',p.black,60);
                DrawFormattedText(p.w ,mat2str(d.payoff(r,t,nc)),ncx-ncw/2,'center',p.black,60);
                Screen('FillRect', p.w, [100 100 100 150],shadeRect, 5);
                tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
                if behav == 1
                if d.response(t)==1 % if choice left
%                     lj.setDIOValue(7,[255 255 255]);
                    success = eyetribe_log(connection, 'Regret right');
                elseif d.response(t)==2
%                     lj.setDIOValue(8,[255 255 255]);
                    success = eyetribe_log(connection, 'Regret left');
                end
                end
                d.regret_onset(t,1) = GetSecs - run_start;
                getchoice(p,p.regret_dur,[]);
                getchoice(p,p.ISI,[]); % ISI
                if behav == 1
%                 lj.setDIOValue([0 0 0]); % Send signal to Biopac
                end

                tim=Screen('Flip',p.w); imageArray = [imageArray; {Screen('GetImage', p.w)}]; timeArray = [timeArray; tim];
            end
            save(p.dataFileName,'d','p','-append');
        end
        
        d.imageArray = imageArray;
        d.timeArray = timeArray;
        
        %% End of experiment
        if behav == 1
        success = eyetribe_log(connection, 'End of Trials');
        end
        % buffer time at end
        Screen('FillRect',p.w,p.background);
        DrawFormattedText(p.w,'+','center','center',p.red,60);
        Screen('Flip',p.w);
        WaitSecs(8);       
        if behav == 1
%         lj.setDIOValue([255 255 255]);
        success = eyetribe_log(connection, 'End of Experiment');
        success = eyetribe_stop_recording(connection);
        success = eyetribe_close(connection);
        end

p.ExpEndTime = datestr(now,31); % End Time format. 
save(p.dataFileName,'d','p','-append');
clear all;
catch
    % This "catch" section executes in case of an error in the "try" section []
    % above.  Importantly, it closes the onscreen window if it's open.
    ShowCursor;
    ListenChar(1);
    Screen('CloseAll');
    fclose('all');
    psychrethrow(psychlasterror);
    clear all;
end
end

